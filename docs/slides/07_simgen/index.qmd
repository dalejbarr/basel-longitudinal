---
title: "7. Random effects structure"
author: Dale Barr
institute: University of Glasgow
title-slide-attributes:
  data-background-image: titlescreen.png
format: 
  revealjs:
    theme: dark
    code-line-numbers: false
    df-print: default
knitr:
  opts_chunk:
    echo: true
---

```{r}
#| label: setup
#| include: false

options(tidyverse.quiet=TRUE)
library("tidyverse")
library("lme4")
library("funfact")

source("../theme_jetblack.R")
theme_set(theme_jetblack(14L))

##source("../theme_jetblack.R")
##theme_set(theme_jetblack(14L))

three_way_mixed <- function() {
  my_design <- list(ivs = c(A = 2, B = 2, C = 2),
                    n_item = 16,
                    between_subj = sample(LETTERS[1:3], 1))
  
  dat <- sim_norm(my_design, 8, params = gen_pop(my_design, 8)) %>%
    as_tibble() %>%
    select(subj_id, A, B, C, DV = Y) %>%
    sample_n(nrow(.))
  
  list(my_design, dat)
}

three_way_mixed_both <- function() {
  n_subj <- 16L
  n_item <- 16L
  if (sample(c(TRUE, FALSE), 1L)) {
    n_subj <- 8L
  } else {
    n_item <- 8L
  }
  my_design <- c(list(ivs = c(A = 2, B = 2, C = 2),
                      n_item = n_item))
  
  dat <- sim_norm(my_design, n_subj, params = gen_pop(my_design, n_subj)) %>%
    as_tibble() %>%
    select(subj_id, item_id, A, B, C, DV = Y) %>%
    sample_n(nrow(.))
  
  list(my_design, dat)  
}  

dir.create("data", FALSE)

set.seed(9122005)
dat1 <- three_way_mixed()[[2]]
dat2 <- three_way_mixed_both()[[2]]

saveRDS(dat1, "data/dat1.rds")
saveRDS(dat2, "data/dat2.rds")
```

# Generalizing over subjects and stimuli

## Clark's Fallacy

- Experiments sample subjects *and* language materials
- Language stimuli should be treated as random, not fixed
- Clark's suggestion: \(F'\), min-\(F'\)
- Modern solution: Linear-mixed effects with crossed random factors of subjects and stimuli

::: aside
Baayen, R. H., Davidson, D. J., & Bates, D. M. (2008). [Mixed-effects modeling with crossed random effects for subjects and items.](https://doi.org/10.1016/j.jml.2007.12.005) *Journal of Memory and Language*, *59*, 390-412.

Clark, H. H. (1973). [The language-as-fixed-effect fallacy: A critique of language statistics in psychological research](https://doi.org/10.1016/S0022-5371(73)80014-3). *Journal of Verbal Learning and Verbal Behavior*, *12*, 335-359.
:::

## generalizing over "encounters" {.smaller}

The target of inference in much of psychology and related fields has
been misidentified as a population of *subjects* or *stimuli*, when the
actual target of inference is a population of events: *encounters*

- readers encountering words
- insomniacs reading emotions from faces
- gamers playing video games
- audience members watching dance movements
- birds hearing birdsongs

::: aside
Barr, D. J. (2018). Generalizing Over Encounters. In the *Oxford Handbook of Psycholinguistics*.
:::

## Maximal random-effects structure {.smaller}

- all sampling units get random intercepts
- any factor gets by-unit random slope if:
  - levels administered within-unit
  - multiple obs per level per unit
- for interaction terms, need slope for the highest-order combination of within-unit terms in the interaction

::: aside
Barr, D. J. (2013). [Random effects structure for testing interactions in linear mixed-effects models](https://doi.org/10.3389/fpsyg.2013.00328). *Frontiers in Psychology*, *4*, 328.

Barr, D. J., Levy, R., Scheepers, C., & Tily, H. J. (2013). [Random effects structure for confirmatory hypothesis testing: Keep it maximal](https://doi.org/10.1016/j.jml.2012.11.001). *Journal of Memory and Language*, *68*, 255-278.
:::

## {background-iframe="https://rstudio-connect.psy.gla.ac.uk/crossed/"}

## design from data

[dat1.rds](data/dat1.rds){target="_download"}

three way design, IVs $A$, $B$, $C$

```{r}
#| echo: true
#| output-location: fragment
dat1 <- readRDS("data/dat1.rds")

dat1 |> arrange(subj_id)
```

## design from data

:::: {.columns}

::: {.column width="50%"}

```{r}
#| output-location: fragment
dat1 |>
  count(subj_id, A, B, C)
```

:::

::: {.column width="50%"}

| factor| slope  |
|:------|:------:|
| $A$   | ✗      |
| $B$   | ✓      |
| $C$   | ✓      |
| $AB$  | ✗      |
| $AC$  | ✗      |
| $BC$  | ✓      |
| $ABC$ | ✗      |

:::

::::

. . .

```
DV ~ A + B + C + A:B + A:C + B:C + A:B:C + (B + C + B:C | subj_id)
```
. . .
```
DV ~ A * B * C + (B * C | subj_id)
```

## design from data (crossed)

[dat2.rds](data/dat2.rds){target="_download"}

```{r}
#| echo: true
#| output-location: fragment
dat2 <- readRDS("data/dat2.rds")

dat2 |>
  arrange(subj_id, item_id)
```

## by subject {.smaller}

`DV ~ A * B * C + (?? | subj_id) + (?? | item_id)`

```{r}
#| output-location: fragment
dat2 |>
  count(subj_id, A, B, C)
```

. . .

`DV ~ A * B * C + (A * B * C | subj_id) + (?? | item_id)`

## by item {.smaller}

```{r}
#| output-location: fragment
dat2 |>
  count(item_id, A, B, C)
```

. . .

`DV ~ A * B * C + (A * B * C | subj_id) + (1 | item_id)`

## troubleshooting

**non-convergence warning**

*Parameter estimates from a non-converging model are not to be trusted, but can be used as a guide to simplification.*

**'singular fit' message**

*One or more of the estimated covariance matrices is 'singular'. You're probably fine to ignore it, but it's sometimes preferable to simplify to get rid of it.*

## strategy

::: {.incremental}
1. make sure the random effects structure is appropriately specified
2. scale your predictor variables, use deviation coding for categorical predictors
3. consider zero-covariances model
4. drop smallest random effect
:::

. . .

**iterate until the warning/message goes away**

